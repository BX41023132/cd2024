<h1>About</h1>
<p>網頁: <a href="https://bx41023132.github.io/cd2024/">https://bx41023132.github.io/cd2024/</a></p>
<p>網誌: <a href="https://bx41023132.github.io/cd2024/blog">https://bx41023132.github.io/cd2024/blog</a></p>
<p>簡報: <a href="https://bx41023132.github.io/cd2024/reveal">https://bx41023132.github.io/cd2024/reveal</a></p>
<p>倉儲: <a href="https://github.com/BX41023132/cd2024">https://github.com/BX41023132/cd2024</a></p>
<p><span><span class="ui-provider vt wx wy wz xa xb xc xd xe xf xg xh xi xj xk xl xm xn xo xp xq xr xs xt xu xv xw xx xy xz ya yb yc yd ye" dir="ltr">2b 分組倉儲 classroom invitation</span></span>:<a href="https://classroom.github.com/a/KJjlY-0_">https://classroom.github.com/a/KJjlY-0</a></p>
<p>midbg8倉儲:<a href="https://github.com/mdecd2024/2b-midbg8">https://github.com/mdecd2024/2b-midbg8</a></p>
<p>分組網站:<a href="https://mdecd2024.github.io/2b-midbg8/">https://mdecd2024.github.io/2b-midbg8/</a></p>
<p></p>
<p data-sourcepos="3:1-3:32">利用 init_replit 指令安裝所需 Python 模組</p>
<p data-sourcepos="5:1-5:22">chmod u+x init_replit</p>
<p data-sourcepos="5:1-5:22">網站:</p>
<p data-sourcepos="7:1-7:14">./init_replit</p>
<p data-sourcepos="7:1-7:14">blog:</p>
<p data-sourcepos="7:1-7:14">./gen_blog</p>
<h1>課程摘要</h1>
<p></p>
<p></p>
<h2>W1-0222</h2>
<h4>本學期上課內容講解、建立編輯個人倉儲、網站架設。</h4>
<h6>上課內容講解</h6>
<h6>課程目標:</h6>
<ol>
<li>
<h6>讓學員了解如何利用 Web-based 環境(<a href="https://github.com/">Github</a>、<a href="https://www.onshape.com/">Onshape</a>)、近端套件(<a href="https://www.coppeliarobotics.com/">CoppeliaSim</a>) 以及<span> </span><a href="https://www.odoo.com/app/plm">Odoo PLM</a><span> </span>系統進行協同產品設計,<span> </span><a href="https://national-formosa-university.odoo.com/">https://national-formosa-university.odoo.com</a>.</h6>
</li>
<li>
<h6>讓學員了解如何利用<span> </span><a href="https://replit.com/">Replit</a>、<a href="https://github.com/features/codespaces">Codespaces</a><span> </span>與 localhost 維護協同網站內容</h6>
</li>
</ol>
<h6></h6>
<h6>課程評分:</h6>
<h6>學員每週編寫網誌內容佔 40%</h6>
<h6>每週上課內容摘要與分組報告執行分工及進度整理</h6>
<h6>相關資料收集與閱讀心得</h6>
<h6>分組期中報告 (<a href="https://www.google.com/search?q=latex+%E6%95%99%E5%AD%B8">LaTeX</a><span> </span>-&gt; pdf) 與簡報影片 (<a href="https://obsproject.com/">OBS</a><span> </span>-&gt; mp4) 佔 20%</h6>
<h6>每組至多 8 人, 期中報告題目: <strong><a href="https://www.google.com/search?q=odoo+plm">ODOO PLM</a><span> </span>在協同產品設計上的應用 - 以<a href="https://www.google.com/search?q=ball+balancing+platform+dynamics+equations+derivation">鋼球平衡台機電控制系統設計</a>為例</strong></h6>
<h6><strong><a href="https://mde.tw/cd2024/downloads/ball_beam_balancing_PID_control_coppeliasim.7z">ball_beam_balancing_PID_control_coppeliasim.7z</a></strong></h6>
<h6><strong><a href="https://mde.tw/cd2024/downloads/ball_beam_balancing_PID_control_coppeliasim_1d_and_2d.7z">ball_beam_balancing_PID_control_coppeliasim_1d_and_2d.7z</a></strong></h6>
<h6>分組期末報告 (<a href="https://www.google.com/search?q=latex+%E6%95%99%E5%AD%B8">LaTeX</a><span> </span>-&gt; pdf) 與簡報影片 (<a href="https://obsproject.com/">OBS</a><span> </span>-&gt; mp4) 佔 40%</h6>
<h6>期末報告題目:<span> </span><strong>網際綜合球類競賽機器人協同設計與模擬</strong></h6>
<h6>(競技場景中必須納入數位計時器與類比記分機構</h6>
<h6>每場競技時間為 10 分鐘</h6>
<h6>每隊球員機器人依照各組人數平均分為兩隊</h6>
<h6>每位機器人球員必須同時具備踢球、取球與投球機構</h6>
<h6>雙方陣營各有足球門與籃球框各一具</h6>
<h6>球場中由裁判程式於開場時, 在球場正中央落下 10 球</h6>
<h6>將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分)</h6>
<h6></h6>
<h6></h6>
<h6>建立個人倉儲</h6>
<h6>登入 github.com, 連結到<span> </span><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a>, 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄.</h6>
<h6><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a><span> </span>與<span> </span><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a><span> </span>的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組.</h6>
<h4></h4>
<h4></h4>
<h2>W2-0229</h2>
<h4>分組分工、加入Classroom、建立分組倉儲。</h4>
<h6>建立分組倉儲</h6>
<h6>由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.</h6>
<h6>根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.</h6>
<h6>2b-midbg8倉儲:</h6>
<h6>midbg8倉儲:<a href="https://github.com/mdecd2024/2b-midbg8">https://github.com/mdecd2024/2b-midbg8</a></h6>
<h6>分組網站:<a href="https://mdecd2024.github.io/2b-midbg8/">https://mdecd2024.github.io/2b-midbg8/</a></h6>
<h4><br/><br/></h4>
<h2>W3-0307</h2>
<h4>個人倉儲設為分組倉儲之子模組</h4>
<h6>將組員的個人倉儲設為分組倉儲子模組</h6>
<h6>以 submodule 的方式納入各分組倉儲與網站, 設定的指令為:</h6>
<h6>git submodule add 組員的個人倉儲網址 組員的學號</h6>
<h6>例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行:</h6>
<h6>git submodule add https://github.com/scrum-1/cd2024.git 41123299</h6>
<h6>如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲.</h6>
<h6>另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理.</h6>
<h6>一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用:</h6>
<h6>git clone --recurse-submodules 加上各組的倉儲 URL</h6>
<h6>以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com:</h6>
<h6>git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git</h6>
<h6>而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行.</h6>
<h6></h6>
<h4></h4>
<h2>W4-0314</h2>
<h4>翻議論文、git branch</h4>
<h4></h4>
<h6>翻譯工作分配</h6>
<h6>41023132:P1-44</h6>
<h6><a href="/downloads/41023132-P1-44.pdf">/downloads/41023132-P1-44.pdf</a></h6>
<h6>41039138:P45-87</h6>
<h2>W5-0321</h2>
<h4>影片整理(字幕)、分組網誌的統整、NX 零組件繪圖</h4>
<h6>工作分配</h6>
<h6><span>41023132影片1-7</span></h6>
<h6><span>41039138影片8-14</span></h6>
<h4><span></span></h4>
<h2>W6-0328</h2>
<h4>說明協同 NX 零組件繪圖、 CoppeliaSim 場景模擬相關檔案格式</h4>
<h6>ODOO PLM 論文中英並列任務</h6>
<h6>由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作.</h6>
<h6>若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載<span> </span><a href="http://229.cycu.org/miktex-portable.7z">miktex-portable.7z</a><span> </span>(需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料:<span> </span><a href="http://229.cycu.org/latex_images_github.7z">latex_images_github.7z</a><span> </span>(需要密碼)</h6>
<h6><a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf</a><span> </span>or<span> </span><a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">local</a><span> </span>download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析)</h6>
<h6>英文單字查詢:<span> </span><a href="https://mde.tw/cd2024/downloads/2021_odoo_reading.html">2021_odoo_reading.html</a></h6>
<h6>教學影片分組整理並自評</h6>
<h6>請各組自行搜尋前面已經發布的教學影片, 分別</h6>
<ul>
<li>
<h6>在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上</h6>
</li>
<li>
<h6>從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排</h6>
</li>
<li>
<h6>並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點</h6>
</li>
</ul>
<h4><span></span></h4>
<h2>W9-0418</h2>
<h4>期中考週、介紹AI</h4>
<p></p>
<p>自評成績:70</p>
<h6><a href="https://aistudio.google.com/">https://aistudio.google.com/</a></h6>
<h6><a href="https://claude.ai/">https://claude.ai/</a></h6>
<p></p>
<p></p>
<h2>W10-0425</h2>
<h4>鋼球平衡台模擬控制</h4>
<h6>參考資料:(<a href="https://mde.tw/cd2024/blog/2024-cd-midterm.html">https://mde.tw/cd2024/blog/2024-cd-midterm.html</a>)</h6>
<h6>python 3.12 必須自行編譯 python-control 模組:</h6>
<ol>
<li>
<h6>git clone https://github.com/python-control/python-control.git</h6>
</li>
<li>
<h6>cd python-control</h6>
</li>
<li>
<h6>python -m build</h6>
</li>
<li>
<h6>pip install .</h6>
</li>
</ol>
<p><br/><span></span></p>
<p></p>
<h2>W11-0502</h2>
<h4>利用NX1872繪製剛求平衡台所需的零組件</h4>
<p></p>
<p><span></span></p>
<h6>請根據<span> </span><a href="https://mde.tw/cd2024/downloads/Solvespace_model%20_2d_for_cd2024_w6.7z">Solvespace_model _2d_for_cd2024_w6.7z</a><span> </span>零組件尺寸, 利用<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EehhlaMDzTxAlOBppbPSoPwBCzsOQxvshtNL8xJel-zbJQ?e=YwKvdH">Siemens NX1872.7z</a><span> </span>(需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.</h6>
<h6>建立協同 Web-based 機電系統模擬設計必須涉及的議題包括：</h6>
<ol>
<li>
<h6>如何使用 NX 執行零組件繪圖 -<span> </span><a href="https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf">NX 參考資料</a></h6>
</li>
<li>
<h6>如何使用1872版安裝及可攜版 -<span> </span><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872">NX1872</a></h6>
</li>
<li>
<h6>如何啓動及連網認證 -<span> </span><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872">NX1872</a></h6>
</li>
<li>
<h6>了解啓動後用戶設定的存檔位置 -<span> </span><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872">NX1872</a></h6>
</li>
<li>
<h6>認識 NX 的目錄模組架構 -<span> </span><a href="https://mde.tw/cd2024/content/NX.html">NX</a></h6>
</li>
<li>
<h6>認識 NXOpen Python 程式延伸架構 -<span> </span><a href="https://mde.tw/cd2024/content/NXOpen.html">NXOpen</a></h6>
</li>
<li>
<h6>了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法）</h6>
</li>
<li>
<h6>了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches</h6>
</li>
<li>
<h6>學習草圖建構、參數選用及長出特徵使用 -<span> </span><a href="https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf">NX 參考資料</a></h6>
</li>
<li>
<h6>學習如何完成零件組立 -<span> </span><a href="https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf">NX 參考資料</a></h6>
</li>
<li>
<h6>了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例）</h6>
</li>
<li>
<h6>了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例</h6>
</li>
<li>
<h6>了解如何進行場景組件的座標系統轉換</h6>
</li>
<li>
<h6>了解開放式機構及封閉式機構的場景如何設置</h6>
</li>
<li>
<h6>認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機</h6>
</li>
<li>
<h6>瞭解如何運用 Web-based 場景模擬串流</h6>
</li>
<li>
<h6>學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&amp;ZMQ vs IPv6 Websocket&amp;ZMQ)</h6>
</li>
<li>了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告</li>
</ol>
<h2>W12-0509</h2>
<h6>NXOpen 實習項目一</h6>
<h6>以下影片說明如何設定 Siemens NX Journal 存檔格式, 並且利用 NXOpen 程式分別執行建立 block 與挖孔 (透過錄製 Journal 程式產生)後, 請設法將兩個程式合併為一個程式, 可以直接完成建立一個 block 並在其特定面上挖孔.</h6>
<h6></h6>
<h6>實習任務二: 將分組倉儲設為評分網站子模組</h6>
<h6>2a 評分倉儲:<span> </span><a href="https://github.com/mdecd2024/2astud-2asite">https://github.com/mdecd2024/2astud-2asite</a></h6>
<h6>2b 評分倉儲:<span> </span><a href="https://github.com/mdecd2024/2bstud-2bsite">https://github.com/mdecd2024/2bstud-2bsite</a></h6>
<h6>以 2a 第一組分組倉儲<span> </span><a href="https://github.com/mdecd2024/2a-midag1">https://github.com/mdecd2024/2a-midag1</a><span> </span>為例, 設為 2astud-2asite 倉儲名稱為 g1 的子模組指令為:</h6>
<h6>git submodule add https://github.com/mdecd2024/2a-midag1 g1</h6>
<h6>其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推.</h6>
<h6>各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式)</h6>
<h6>請各分組先在各組的分組網誌與分組報告中說明, 該如何將分組整合流程擴大到全班協同?</h6>
<h6></h6>
<p>實習任務三: 跨網路操控足球機器人進行競技</p>
<p>請各組從<span> </span><a href="https://github.com/mdecd2023/2a3-pj3ag4">https://github.com/mdecd2023/2a3-pj3ag4</a><span> </span>下載該組當時所完成的倉儲資料, 並參考<a href="https://github.com/mdecd2023/2a3-pj3ag4/releases/tag/v0.0.2">網際手足球機器人場景設計</a>專案報告, 由各組員分別擔任場景競技球員, 利用鍵盤跨網路操控足球機器人進行球賽競技.</p>
<p>執行步驟:</p>
<ol>
<li>在可攜程式系統安裝所需的 Python 模組: pip install pyzmq cbor keyboard</li>
<li>在近端電腦上取下倉儲內容: git clone https://github.com/mdecd2023/2a3-pj3ag4</li>
<li>球場、球員、數位計分器與類比計分器場景, 以及機器人球員控制程式位於: 2a3-pj3ag4\downloads\zmq_football 目錄</li>
<li>利用<span> </span><a href="http://229.cycu.org/CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z">CoppeliaSim 4.5.1 rev1 for IPv6.7z</a><span> </span>開啟 zmq_football 目錄中的 site.ttt</li>
<li>利用可攜程式系統中的 SciTE 編輯器開啟 zmq_football 目錄中的 judge.py, 按下 Tools - Go 之後, CoppeliaSim 中的足球場景將開始進行模擬, 足球從球場正中央拋下, 兩隊球員完成列隊, 準備接受遠端 ZMQ RemoteAPI Python 程式操控, 以便進行球賽競技.</li>
<li>各球員操控程式可跨 IPv4 與 IPv6 網路對場景中的機器人球員進行控制, 球場即時畫面可由 http://球場所在電腦_IP_位址或符號名稱:23020 擷取, 球場與控制端的防火牆必須允許雙方 ZMQ 網路封包通過 port 23000 與 23020, 其中 23000 用於 Python 程式控制, 而 23020 則用於網際 Visualization Stream 影像串流用.</li>
<li>各球員控制端, 分別在各自電腦以可攜程式系統中的 SciTE 編輯器開啟 zmq_football 目錄中的 player.py, 並依據球員編號進行動作操控.</li>
<li>鍵盤中的 a 鍵控制球員向左轉, d 鍵控制球員向右轉, w 向前移動, s 向後移動, space 鍵翻身, 按下 shift 鍵將加速並轉向, 按下 q 鍵則終止模擬.</li>
</ol>
<h6 class="post-tags"><a href="https://mde.tw/cd2024/blog/tag/w12.html">w12</a><a href="https://mde.tw/cd2024/blog/tag/nx.html">NX</a><a href="https://mde.tw/cd2024/blog/tag/evaluation.html">evaluation</a></h6>
<aside class="post-tags"></aside>
<aside class="post-tags"></aside>
<aside class="post-tags"></aside>
<h2>W13-0516</h2>
<h6>課程評分:</h6>
<h6>學員每週編寫網誌內容佔 40%</h6>
<h6>每週上課內容摘要與分組報告執行分工及進度整理</h6>
<h6>相關資料收集與閱讀心得</h6>
<h6>分組期中報告佔 20%</h6>
<h6>分組期中 pdf 報告與 mp4 簡報影片</h6>
<h6>每組至多 8 人</h6>
<h6>期中報告題目:</h6>
<h6>ODOO PLM 在協同產品設計上的應用 - 以鋼球平衡台機電控制系統設計為例</h6>
<h6>分組期末報告佔 40%</h6>
<h6>分組期末 pdf 報告與 mp4 簡報影片</h6>
<p><span> </span></p>
<h1>實習評分項目</h1>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-w13.html">https://mde.tw/cd2024/blog/2024-cd-w13.html</a></h6>
<h6>各週指定任務</h6>
<h6>cd2024 協同產品設計實習課程專案的內容, 主要延續<span> </span><a href="https://mde.tw/cd2024/blog/2024-Spring-Collaborative-Product-Design.html#project">CAD2023</a><span> </span>課程重點, 然後再透過分組, 利用 Odoo PLM 相關文獻閱讀與應用作為協同產品開發流程的參考, 實際進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計.</h6>
<h6>各週指定任務如下:</h6>
<ol>
<li>
<h6>個人 cd2024 與分組倉儲的建立及維護.</h6>
</li>
<li>
<h6>各分組註冊一個<span> </span><a href="https://www.odoo.com/">Odoo</a><span> </span>帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期管理系統網域, 並將<a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">參考論文</a>的協同翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份<a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">參考論文</a>的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告.</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w3.html#latex">指定</a>在<a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">參考論文</a>的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的<span> </span><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w3.html#latex">LaTeX</a><span> </span>原始資料, 整合至分組倉儲中, 採 Github Actions 或近端使用<span> </span><a href="https://mde.tw/cd2024/blog/2024-cd-2a-w3.html#miktex">MikTeX</a><span> </span>建立分組的<a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">參考論文</a>閱讀報告 pdf 檔案(<a href="https://mde.tw/cd2024/blog/2024-cd-2b-w4.html#odoo_assignment">教學</a>).</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#video">要求</a>各分組採協同方式, 在各<a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#self_evaluation">教學影片</a>上填上字幕並嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自評, 在期中考週將自評成績送至教務處.</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872">要求</a>下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟.</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w6.html#copsim_xml">提醒</a><span> </span>CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版.</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-2b-w6.html#sourcetree">提示</a><span> </span>各分組可以利用可攜式<span> </span><a href="https://www.sourcetreeapp.com/">Sourcetree</a><span> </span>套件, 在近端充分了解個人倉儲與分組倉儲的各種改版或解決衝突議題.</h6>
</li>
<li>
<h6>在<a href="https://mde.tw/cd2024/blog/2024-cd-2a-w7.html">第七週</a>摘要出 cd2024 各項分組協同模式的要點及執行方法.</h6>
</li>
<li>
<h6>在<a href="https://mde.tw/cd2024/blog/2024-cd-midterm.html">第八週</a>說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟.</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-w10-practice.html">第十週</a>起, 要求學員完成三項實習任務. (<a href="https://mde.tw/cd2024/blog/2024-cd-w10-practice.html#brython">建立倉儲與網站連結</a>、<a href="https://mde.tw/cd2024/blog/2024-cd-w10-practice.html#pid_control">PID 控制文獻整理</a>、<a href="https://mde.tw/cd2024/blog/2024-cd-w10-practice.html#nx_part_assembly">NX 平台零組件繪圖</a>)</h6>
</li>
<li>
<h6><a href="https://mde.tw/cd2024/blog/2024-cd-w12-practice.html">第十二週</a>的三項實習任務 (<a href="https://mde.tw/cd2024/blog/2024-cd-w12-practice.html#nxopen">NXOpen 零組件繪製</a>、<a href="https://mde.tw/cd2024/blog/2024-cd-w12-practice.html#submodule">分組倉儲設為評分倉儲子模組</a>、<a href="https://mde.tw/cd2024/blog/2024-cd-w12-practice.html#robot">足球機器人場景模擬</a>).</h6>
</li>
</ol>
<h6>課程評分:</h6>
<h6>學員每週編寫網誌內容佔 <span style="color: #ff0000;">40%</span></h6>
<h6>每週上課內容摘要與分組報告執行分工及進度整理</h6>
<h6>相關資料收集與閱讀心得</h6>
<h6>分組期中報告佔 <span style="color: #ff0000;">20%</span></h6>
<h6>分組期中 pdf 報告與 mp4 簡報影片</h6>
<h6>每組至多 8 人</h6>
<h6>期中報告題目:</h6>
<h6>ODOO PLM 在協同產品設計上的應用 - 以鋼球平衡台機電控制系統設計為例</h6>
<h6>分組期末報告佔 <span style="color: #ff0000;">40%</span></h6>
<h6>分組期末 pdf 報告與 mp4 簡報影片</h6>
<h6>期末報告題目: 網際綜合球類競賽機器人協同設計與模擬</h6>
<h6>競技場景中必須納入數位計時器與類比記分機構</h6>
<h6>每場競技時間為 10 分鐘</h6>
<h6>每隊球員機器人依照各組人數平均分為兩隊</h6>
<h6>每位機器人球員必須同時具備踢球、取球與投球機構</h6>
<h6>雙方陣營各有足球門與籃球框各一具</h6>
<h6>球場中由裁判程式於開場時, 在球場正中央落下 10 球</h6>
<h6>將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分</h6>
<p></p>
<p></p>
<p></p>
<h1>翻譯HW</h1>
<h4>分組名單</h4>
<p>41023132 林秉賢:P1-44</p>
<p><a href="https://drive.google.com/file/d/1Ir5IDX28NQiox_ukMs8uV-L4gSOYt6Bo/view?usp=drive_link">https://drive.google.com/file/d/1Ir5IDX28NQiox_ukMs8uV-L4gSOYt6Bo/view?usp=drive_link</a></p>
<p></p>
<p>41039138 凃家豐:P45-87</p>
<p><a href="/downloads/latex2.pdf">/downloads/latex2.pdf</a></p>
<p><a href="/downloads/41039138翻譯中英並列.pdf">/downloads/41039138翻譯中英並列.pdf</a></p>
<p></p>
<p>完整P1-87</p>
<p><a href="https://drive.google.com/file/d/1rG2VtwTDtBKGuxzg3nfv0eUlfXpOFsT3/view?usp=drive_link">https://drive.google.com/file/d/1rG2VtwTDtBKGuxzg3nfv0eUlfXpOFsT3/view?usp=drive_link</a></p>
<p></p>
<p></p>
<h1>W5-HW</h1>
<p>1</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/JyGRsX7UTo0?si=J5QqU1686hVdSUt3" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><span><a href="/downloads/1建個人課程倉儲與網頁.txt">/downloads/1建個人課程倉儲與網頁.txt</a></span></p>
<p><span><a href="/downloads/1cd2024_2b_1_建立個人課程倉儲與網站.mp4"></a></span>2</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/71k1rioHrZw?si=MkcrNOsv2yjqa311" title="YouTube video player" width="560"></iframe></p>
<p><span><a href="/downloads/2如何從 Replit Account 設定 Connect 連結到 Github.txt">/downloads/2如何從 Replit Account 設定 Connect 連結到 Github.txt</a></span></p>
<p><span>3</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/r9f2g3U6Km8?si=YrEp7_r5cxwlUk3B" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><span><a href="/downloads/3如何設定 Github 帳號的雙重認證.txt">/downloads/3如何設定 Github 帳號的雙重認證.txt</a></span></p>
<p><span>4-1</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/M34uvvI2kMU?si=9NTpbUarW8uUZMSa" title="YouTube video player" width="560"></iframe></p>
<p><span>4-2</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3gEGAN8vTQA?si=aTF84lHSzpkyNXyS" title="YouTube video player" width="560"></iframe></p>
<p><span><a href="/downloads/4說明如何將倉儲 import 至 Replit 改版後推回 github.txt">/downloads/4說明如何將倉儲 import 至 Replit 改版後推回 github.txt</a></span></p>
<p><span>5-1</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/O8u4nPoYufE?si=G7IKCGAq1x3ltF5O" title="YouTube video player" width="560"></iframe></p>
<p><span>5-2</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/yaPm0EokUX8?si=nY8l2NBnxWDnXaVC" title="YouTube video player" width="560"></iframe></p>
<p><span><a href="/downloads/5第一組組長建立 Team 並設定分組倉儲.txt">/downloads/5第一組組長建立 Team 並設定分組倉儲.txt</a></span></p>
<p><span>6</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ONu-ptr0aQI?si=LMRvW8SIPYUomlM-" title="YouTube video player" width="560"></iframe></p>
<p><span> </span></p>
<p><span><a href="/downloads/6從第一組空倉儲建立 cmsimde_site 內容.txt">/downloads/6從第一組空倉儲建立 cmsimde_site 內容.txt</a></span></p>
<p><span>7</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/aBmgPXlqnRw?si=jb3ffDvQvP31W723" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><span><a href="/downloads/7利用 codespaces 維護分組網站.txt">/downloads/7利用 codespaces 維護分組網站.txt</a></span></p>
<p><span><a href="/downloads/1cd2024_2b_1_建立個人課程倉儲與網站.mp4"></a></span></p>
<p><span></span></p>
<h1>期中自評影片</h1>
<p><strong></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/7bs9EacGPtQ?si=WgavFuXxhly0svLX" title="YouTube video player" width="560"></iframe></p>
<h1>W10-HW</h1>
<p></p>
<p>任務一:(NX連結+Solvespace截圖)</p>
<p>工作分配</p>
<p>41039138:</p>
<p>鋼球平台</p>
<p><a href="https://drive.google.com/file/d/1zIHRIq_ERUROuSvUynqLWAY5SgbMeiN4/view?usp=drive_link">https://drive.google.com/file/d/1zIHRIq_ERUROuSvUynqLWAY5SgbMeiN4/view?usp=drive_link</a></p>
<p></p>
<p><img alt="" height="116" src="/images/plat.png" width="200"/></p>
<p>41023132:</p>
<p>y link</p>
<p><a href="https://drive.google.com/file/d/1d4Vug0XfPz2ExGvpVWbHs9kx1-u-VPU1/view?usp=drive_link">https://drive.google.com/file/d/1d4Vug0XfPz2ExGvpVWbHs9kx1-u-VPU1/view?usp=drive_link</a></p>
<p></p>
<p><img alt="" height="132" src="/images/y.png" width="199"/></p>
<p>s link </p>
<p><a href="https://drive.google.com/file/d/1Dv6r-_rla3Q3DiMhiXjVshK04RQG8Hyc/view?usp=drive_link">https://drive.google.com/file/d/1Dv6r-_rla3Q3DiMhiXjVshK04RQG8Hyc/view?usp=drive_link</a></p>
<p></p>
<p><img alt="" height="131" src="/images/s.png" width="199"/></p>
<p>base</p>
<p><a href="https://drive.google.com/file/d/1_5Q4m5je0MN0wPjHaWeIL6yHv9x5JLo6/view?usp=drive_link">https://drive.google.com/file/d/1_5Q4m5je0MN0wPjHaWeIL6yHv9x5JLo6/view?usp=drive_link</a></p>
<p></p>
<p><img alt="" height="135" src="/images/base.png" width="202"/></p>
<p>shaft</p>
<p><a href="https://drive.google.com/file/d/1_5Q4m5je0MN0wPjHaWeIL6yHv9x5JLo6/view?usp=drive_link">https://drive.google.com/file/d/1_5Q4m5je0MN0wPjHaWeIL6yHv9x5JLo6/view?usp=drive_link</a></p>
<p></p>
<p><img alt="" height="150" src="/images/shaft.png" width="204"/></p>
<p></p>
<p>任務二:鋼球平衡台 PID 控制與模擬</p>
<p>影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/1XAeosESys0?si=RUe-zy6jIcjWlNv-" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>截圖</p>
<p><img alt="" height="161" src="/images/螢幕擷取畫面 2024-05-09 135847.png" width="237"/>            <img alt="" height="178" src="/images/Figure_1.png" width="238"/></p>
<p></p>
<h1>W12-HW</h1>
<p>工作分配</p>
<p></p>
<p>實習任務一:41023132</p>
<p>實習任務二:41039138、41023132</p>
<p>實習任務三:</p>
<p>1.操控足球機器人進行競技:(41039138)</p>
<p>2.繪製競技足球相關零件:(41023132)</p>
<p></p>
<p></p>
<p>任務一:NXOPEN</p>
<p>以下影片說明如何設定 Siemens NX Journal 存檔格式, 並且利用 NXOpen 程式分別執行建立 block 與挖孔 (透過錄製 Journal 程式產生)後, 請設法將兩個程式合併為一個程式, 可以直接完成建立一個 block 並在其特定面上挖孔.</p>
<p>nxopen create a new part:</p>
<p><a href="https://drive.google.com/file/d/19daqSlctvkNmS5zVh8h4g70xKEczuPbH/view?usp=drive_link">https://drive.google.com/file/d/19daqSlctvkNmS5zVh8h4g70xKEczuPbH/view?usp=drive_link</a></p>
<p>journal:</p>
<p><a href="https://drive.google.com/file/d/1IBx-CXFwV4lKyex9Qmwyxa5XNOy8ObEf/view?usp=drive_link">https://drive.google.com/file/d/1IBx-CXFwV4lKyex9Qmwyxa5XNOy8ObEf/view?usp=drive_link</a></p>
<p>new:</p>
<p><a href="https://drive.google.com/file/d/1-Dxye8L3iQDHPwJhBmbVP7-h0Hw28K7v/view?usp=drive_link">https://drive.google.com/file/d/1-Dxye8L3iQDHPwJhBmbVP7-h0Hw28K7v/view?usp=drive_link</a></p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Yq1q4eg9n14?si=guGEwwUZvW9vYVXz" title="YouTube video player" width="560"></iframe></p>
<p>任務二:將分組倉儲設為評分網站子模組</p>
<p>2a 評分倉儲:<span> </span><a href="https://github.com/mdecd2024/2astud-2asite">https://github.com/mdecd2024/2astud-2asite</a></p>
<p>2b 評分倉儲:<span> </span><a href="https://github.com/mdecd2024/2bstud-2bsite">https://github.com/mdecd2024/2bstud-2bsite</a></p>
<p>以 2a 第一組分組倉儲<span> </span><a href="https://github.com/mdecd2024/2a-midag1">https://github.com/mdecd2024/2a-midag1</a><span> </span>為例, 設為 2astud-2asite 倉儲名稱為 g1 的子模組指令為:</p>
<p>git submodule add https://github.com/mdecd2024/2a-midag1 g1</p>
<p></p>
<p>任務三:<span>跨網路操控足球機器人進行競技</span></p>
<p><span></span></p>
<p><span>零件:</span></p>
<p><span>1.球場:<a href="https://drive.google.com/file/d/14qBd0F_TtcKnVi-7i4sGsBO_LfSksYsO/view?usp=drive_link">https://drive.google.com/file/d/14qBd0F_TtcKnVi-7i4sGsBO_LfSksYsO/view?usp=drive_link</a></span></p>
<p><span></span></p>
<p><span>2.競技球:<a href="https://drive.google.com/file/d/1vBT2HPVWGzMjjmmwAjgn-W0AbagQqGMO/view?usp=drive_link">https://drive.google.com/file/d/1vBT2HPVWGzMjjmmwAjgn-W0AbagQqGMO/view?usp=drive_link</a></span></p>
<p><span></span></p>
<p><span>3.球員:<a href="https://drive.google.com/file/d/1htX1jAnFyEqV3iCdO8xW71biD8qxOj1b/view?usp=drive_link">https://drive.google.com/file/d/1htX1jAnFyEqV3iCdO8xW71biD8qxOj1b/view?usp=drive_link</a></span></p>
<p><span></span></p>
<p><span>4.組合:<a href="https://drive.google.com/file/d/19_rclGE-6ZnltQxpKEDaCwBlm1txkgDo/view?usp=drive_link">https://drive.google.com/file/d/19_rclGE-6ZnltQxpKEDaCwBlm1txkgDo/view?usp=drive_link</a></span></p>
<p><span></span></p>
<p><span></span></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jN2-4E6mAZA?si=9FGKWHXzZ3d91Jp7" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/u7Wzc-2tV84?si=Ghx3BGk5r8xcVBbX" title="YouTube video player" width="560"></iframe></p>
<h1>W15-HW(鋼球video)</h1>
<p>鋼球平衡台控制</p>
<p></p>
<p>\ <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gPgQClVcBts?si=Y9bj1ndgDbd9VhGY" title="YouTube video player" width="560"></iframe></p><h1>Odoo</h1>
<p><a href="https://2b-midbg8.odoo.com/odoo/action-371?cids=1">https://2b-midbg8.odoo.com/odoo/action-371?cids=1</a></p>
<p></p>
<p><img alt="" height="179" src="/images/螢幕擷取畫面 2024-05-16 155610.png" width="403"/></p>
<p><img alt="" height="204" src="/images/螢幕擷取畫面 2024-05-16 155556.png" width="404"/></p>
<p><img alt="" height="185" src="/images/螢幕擷取畫面 2024-05-16 155622.png" width="406"/></p>
<p></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>